// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	pb "github.com/sergicanet9/go-microservices-demo/common/proto/usermanagementapi/v1/gen/go/pb"
	mock "github.com/stretchr/testify/mock"
)

// UserManagementAPIV1GRPCClient is an autogenerated mock type for the UserManagementAPIV1GRPCClient type
type UserManagementAPIV1GRPCClient struct {
	mock.Mock
}

// Close provides a mock function with no fields
func (_m *UserManagementAPIV1GRPCClient) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Health provides a mock function with no fields
func (_m *UserManagementAPIV1GRPCClient) Health() pb.HealthServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Health")
	}

	var r0 pb.HealthServiceClient
	if rf, ok := ret.Get(0).(func() pb.HealthServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.HealthServiceClient)
		}
	}

	return r0
}

// User provides a mock function with no fields
func (_m *UserManagementAPIV1GRPCClient) User() pb.UserServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for User")
	}

	var r0 pb.UserServiceClient
	if rf, ok := ret.Get(0).(func() pb.UserServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.UserServiceClient)
		}
	}

	return r0
}

// NewUserManagementAPIV1GRPCClient creates a new instance of UserManagementAPIV1GRPCClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserManagementAPIV1GRPCClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserManagementAPIV1GRPCClient {
	mock := &UserManagementAPIV1GRPCClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
